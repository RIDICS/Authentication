@using Scalesoft.Localization.AspNetCore
@using Ridics.Authentication.Service.Models.ViewModel
@using Ridics.Authentication.Service.Models.ViewModel.Clients
@model ListViewModel<ClientViewModel>
@inject ILocalizationService Localizer

@if (Model == null)
{
    return;
}

@if (Model.Items != null && Model.Items.Count != 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].AllowedGrantTypes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].AllowedIdentityResources)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].AllowedScopes)
                    <span class="btn-sm btn-muted small tooltip-help" title="<h4>@Localizer.Translate("scopes-tooltip-heading")</h4><span>@Localizer.Translate("scopes-tooltip-text")</span>">
                        ?
                    </span>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].DisplayUrl)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].RequireConsent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items[0].AllowAccessTokensViaBrowser)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var client in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => client.Name)<br />
                </td>
                <td>
                    @if (client.AllowedGrantTypes != null)
                    {
                        foreach (var grantType in client.AllowedGrantTypes)
                        {
                            @Html.DisplayFor(modelItem => grantType.DisplayName)<br />
                        }
                    }
                </td>
                <td>
                    @if (client.AllowedIdentityResources != null)
                    {
                        foreach (var identityResource in client.AllowedIdentityResources)
                        {
                            @Html.DisplayFor(modelItem => identityResource.Name)<br />
                        }
                    }
                </td>
                <td>
                    @if (client.AllowedScopes != null)
                    {
                        foreach (var scopes in client.AllowedScopes)
                        {
                            @Html.DisplayFor(modelItem => scopes.Name)<br />
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => client.DisplayUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => client.RequireConsent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => client.AllowAccessTokensViaBrowser)
                </td>
                <td>
                    @{
                        var deleteFormId = $"delete_{client.Id}";
                    }
                    <a asp-action="View" asp-route-id="@client.Id">@Localizer.Translate("detail")</a>
                    <a asp-action="Edit" asp-route-id="@client.Id">@Localizer.Translate("edit")</a>
                    <form asp-action="Delete" asp-route-id="@client.Id" id="@deleteFormId" hidden>
                        <input type="hidden" name="id" value="@client.Id" />
                    </form>
                    <a href="#" data-formid="@deleteFormId" data-info="@client.DisplayUrl" data-toggle="modal" data-target="#confirmModal">@Localizer.Translate("delete") </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div class="no-items">@Localizer.Translate("no-clients")</div>
}
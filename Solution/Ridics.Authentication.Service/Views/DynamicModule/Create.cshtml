@using Scalesoft.Localization.AspNetCore
@using Ridics.Authentication.Service.Models.ViewModel.DynamicModule
@model Ridics.Authentication.Service.Models.ViewModel.DynamicModule.CreateDynamicModuleViewModel
@inject ILocalizationService Localizer

@{
    ViewData["Title"] = Localizer.Translate("create-dynamic-module-title");
}

<h2>@Localizer.Translate("create-dynamic-module-heading")</h2>
<hr/>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ModuleGuid" class="control-label"></label>
                <select asp-for="ModuleGuid" asp-items="Model.DynamicModules?.Select(x => new SelectListItem(x.DefaultDisplayName, x.ModuleGuid.ToString()))" class="form-control">
                    <option>@Localizer.Translate("choose-variant")</option>
                </select>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            @if (!Model.ModuleGuid.Equals(Guid.Empty))
            {
                foreach (var module in Model.AvailableDynamicModule)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" asp-for="NameOption" id="dynamicModule-radio-@module" value="@module">
                        <label class="form-check-label" for="dynamicModule-radio-@module">
                            @module
                        </label>
                    </div>
                }
                <div class="form-check">
                    <div class="form-group">
                        <input class="form-check-input" type="radio" asp-for="NameOption" id="dynamicModule-radio--custom" value="@CreateDynamicModuleViewModel.CustomName">
                        <label class="form-check-label" for="dynamicModule-radio--custom">
                            @Localizer.Translate("custom"):
                        </label>
                        <input asp-for="Name" class="form-control"/>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="@Localizer.Translate("create")" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer.Translate("back")</a>
</div>
